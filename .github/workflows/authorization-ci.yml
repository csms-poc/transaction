name: Transaction CI

on:
  push:
    branches: 'master'


jobs:


  analyse-and-build:

    name: Build
    needs: check-code-formatting
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: 21
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Start Kafka
        uses: 280780363/kafka-action@v1.0
        with:
          kafka version: "3.5.1" # Optional, kafka version
          zookeeper version: "latest" # Optional, zookeeper version
          kafka port: 9092 # Optional, kafka port
          zookeeper port: 2181 # Optional, zookeeper port
          auto create topic: "true" # Optional, auto create kafka topic

      - name: Build and Run Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/voltmasters/transaction:${{ steps.project.outputs.version }}
            ghcr.io/voltmasters/transaction:latest-snapshot
  
  
  check-code-formatting:

    name: Check Code Formatting

    strategy:
      matrix:
        platform: [ ubuntu-latest , macos-latest , windows-latest ]
    
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: 21
        cache: 'maven'
    
    - name: Check Code Formatting
      run: |
        mvn -e spotless:check
        echo "Run the command 'mvn spotless:apply' to fix Java formatting if this job fails or Build with Maven"
